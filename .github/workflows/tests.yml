name: API tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      # 1. Клонируем основной репозиторий (с тестами)
      - name: Check out repository
        uses: actions/checkout@v4

      # 2. Устанавливаем Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # 3. Клонируем приватный репозиторий сервера с использованием токена
      - name: Clone test server repository
        run: git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/bogdanshcherban8/qa-automation-engineer-api-course.git

      # 4. Устанавливаем зависимости сервера
      - name: Install test server dependencies
        run: pip install -r qa-automation-engineer-api-course/requirements.txt

      # 5. Запускаем сервер в фоне
      - name: Start test server
        env:
          APP_HOST: "http://localhost:8000"
          DATABASE_URL: "sqlite+aiosqlite:///./local.db"
          JWT_ALGORITHM: "HS256"
          JWT_SECRET_KEY: "qa-automation-engineer-api-course-secret-key"
          JWT_ACCESS_TOKEN_EXPIRE: 1800
          JWT_REFRESH_TOKEN_EXPIRE: 5184000
        run: |
          nohup uvicorn main:app --host 0.0.0.0 --port 8000 --app-dir ./qa-automation-engineer-api-course & 
          sleep 5  # ждём 5 секунд, чтобы сервер успел подняться

      # 6. Устанавливаем зависимости тестов
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 7. Запускаем тесты
      - name: Run API tests with pytest and generate Allure results
        run: |
          pytest -m regression --alluredir=allure-results --numprocesses 2

      # 8. Получаем историю Allure
      - name: Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      # 9. Генерируем Allure отчет
      - name: Generates Allure Report with history
        uses: simple-elf/allure-report-action@v1.13
        if: always()
        with:
          allure_results: allure-results
          allure_history: allure-history

      # 10. Деплой отчета на GitHub Pages
      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
